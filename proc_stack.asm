.model SMALL
.stack
.data

VAR1 DW 1
VAR2 DW 3
RES DW ?

.code
.startup

MOV AX, VAR1
MOV BX, VAR2
PUSH AX ;PUSHING 1
PUSH BX ;PUSHING 3
CALL SUM
POP BX
POP AX ;THE LAST POP WILL RETURN THE RESULT -> POP OF 4 (3+1)

MOV RES, AX ;RES WILL CONTAIN 4

.exit

SUM PROC NEAR
    PUSH BP
    MOV BP, SP ;MUST BE DONE BEFORE THE FOLLOWING PUSH. WE ARE NOT ALLOWED TO WRITE THE SP (STACK POINTER), BUT WE CAN READ IT
    PUSH AX
    PUSH BX
    PUSH CX
    PUSH DX
    
    MOV AX, [BP+4] ;CONTAINS 3
    ADD AX, [BP+6] ;CONTAINS 1
    MOV [BP+6], AX ;PUT THE RESULT OF ADD IN THE BOTTOM OF THE STACK -> [BP+6]
    
    POP DX
    POP CX
    POP BX
    POP AX
    POP BP
    RET
SUM  ENDP

end